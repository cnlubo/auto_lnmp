#! Encoding UTF-8

# default timezone
TZ=Asia/Shanghai
#################################################################################
# Nginx Apache and PHP-FPM process default run user
run_user=www
# default enable ioptables
iptables_yn='y'
devtoolsetsix='n'         # Enable or disable devtoolset-6 GCC 6.2 support instead of devtoolset-4 GCC 5.3 support
devtoolsetseven='n'       # Enable or disable devtoolset-7 GCC 7.1 support instead of devtoolset-6 GCC 6.2 support
devtoolseteight='y'       # source compiled GCC 8 from latest snapshot builds
nginx_devtoolsetgcc='y'   # Use devtoolset-4 GCC 5.3 even for CentOS 7 nginx compiles
general_devtoolsetgcc='n' # Use devtoolset-4 GCC 5.3 whereever possible/coded

############## db settings########################################################
mysql_user=mysql # mysql user
##############nginx tengine openresty settings####################################
nginx_install_dir=/opt/modules/nginx
tengine_install_dir=/opt/modules/tengine
openresty_install_dir=/opt/modules/openresty
openssl_install_dir=/usr/local/openssl
openssl11_install_dir=/usr/local/openssl11
zlib_install_dir=/usr/local/software/sharelib
pcre_install_dir=/usr/local/software/pcre
libxml2_install_dir=/usr/local/software/sharelib
libxslt_install_dir=/usr/local/software/sharelib

# Add modules
nginx_modules_options=''
# nginx Generate a log storage directory, you can freely specify.
wwwlogs_dir=/u01/wwwlogs

#########devOps tools ########################################################
ruby_install_dir=/usr/local/software/ruby
go_install_dir=/usr/local/software
#########################################################################
# web directory, you can customize
wwwroot_dir=/u01/www

# set the default install path, you can freely specify
tomcat_install_dir=/u01/modules/tomcat
#########################################################################
# Backup Dest directory, change this if you have someother location
backup_dir=/data/backup

# How many days before the backup directory will be removed
expired_days=5

# local ; remote ; local,remote
backup_destination=

# db ; web, You can't change
backup_content=

# aliyun OSS Bucket, You can't change
oss_bucket=

# The backup of the database, You can't change
db_name=

# The backup of the website, You can't change
website_name=

#other dirs
src_dir="$script_dir/src"
LogPath="$script_dir/log"
FunctionPath="$script_dir/function"
TemplatePath="$script_dir/template"
#logfile path
# InfoLog=$LogPath/log_err\$(date +%Y%m%d).log
# ErrLog=$LogPath/log_info\$(date +%Y%m%d).log

#DownloadTmp="/tmp"
#MyCronBashPath="\$InstallPath/mybash"
#MyBashLogPath="\$LogPath/mybash"
#Python2Path="\$ScriptPath/py2"

#jdk setting
#java_dir=/u01/soft/jdk1.7
#java_run_user=ak47
# Tomcat $run_user
tomcat_run_user=tomcat
# Choose whether to compile Nginx --with-google_perftools_module
gperftools_sourceinstall='n'
gperftools_tmalloclargepages='y' 
# set larger page size for tcmalloc --with-tcmalloc-pagesize=32
tcmalloc_pagesize='32'

cloudflare_zlib='y'
# use Cloudflare optimised zlib fork https://blog.cloudflare.com/cloudflare-fights-cancer/
# cloudflare_zlib_dynamic='y'
# compile nginx CF zlib as a dynamically instead of statically
#cloudflare_zlib_openssl='n' # compile dynamically custom OpenSSL against Cloudflare zlib library
#cloudflare_zlibreset='y'    # if CLOUDFLARE_ZLIB='n' set, then revert gzip compression level from 9 to 5 automatically
#cloudflare_zlibrautomax='n' # don't auto raise nginx gzip compression level to 9 if using Cloudflare zlib
#cloudflare_zlibphp='n'      # use Cloudflare optimised zlib fork for PHP-FPM zlib instead of system zlib
#cloudflare_zlibdebug='n'    # make install debug verbose mode
cloudflare_zlibver='1.3.0'
nginx_pcrejit='y'      # Nginx configured with pcre & pcre-jit support
nginx_pcre_dynamic='y' # compile nginx pcre as dynamic instead of static library

NGX_GSPLITDWARF='y' # for Nginx compile https://community.centminmod.com/posts/44072/
PHP_GSPLITDWARF='y' # for PHP compile https://community.centminmod.com/posts/44072/
PHP_LTO='n'         # enable -flto compiler for GCC 4.8.5+ PHP-FPM compiles currently not working with PHP 7.x
NGX_LDGOLD='y'
# for Nginx compile i.e. passing ld.gold linker -fuse-ld=bfd or -fuse-ld=gold
# https://community.centminmod.com/posts/44037/

#NGINX_FATLTO_OBJECTS='n'
# enable -ffat-lto-objects flag for nginx builds - much slower compile times
#NGINX_NOFATLTO_OBJECTS='n'
# enable -fno-fat-lto-objects flag for nginx builds - much slower compile times
# recommended to keep NGINXOPENSSL_FATLTO_OBJECTS and NGINXOPENSSL_NOFATLTO_OBJECTS set to = n
#NGINXOPENSSL_FATLTO_OBJECTS='n'   # enable -ffat-lto-objects flag for nginx OpenSSL builds - much slower compile times
#NGINXOPENSSL_NOFATLTO_OBJECTS='n' # enable -fno-fat-lto-objects flag for nginx OpenSSL builds - much slower compile times
NGINXCOMPILE_FORMATSEC='y'
# whether or not nginx is compiled with -Wformat -Werror=format-security flags
NGINX_NJS='n'
# nginScript https://www.nginx.com/blog/launching-nginscript-and-looking-ahead/
NGINX_STREAM='y'           # http://nginx.org/en/docs/stream/ngx_stream_core_module.html
NGINX_STREAMGEOIP='y'      # nginx 1.11.3+ option http://hg.nginx.org/nginx/rev/558db057adaa
NGINX_STREAMREALIP='y'     # nginx 1.11.4+ option http://hg.nginx.org/nginx/rev/9cac11efb205
NGINX_STREAMSSLPREREAD='y' # nginx 1.11.5+ option https://nginx.org/en/docs/stream/ngx_stream_ssl_preread_module.html
NGINX_SPDY='n'             # Nginx SPDY support
NGINX_SPDYPATCHED='y'      # Cloudflare HTTP/2 + SPDY patch https://github.com/cloudflare/sslconfig/blob/master/patches/nginx__http2_spdy.patch
NGINX_TESTCOOKIE='n'       # https://github.com/kyprizel/testcookie-nginx-module
NGINX_TESTCOOKIEGIT='n'    # triggers only if NGINX_TESTCOOKIE='y'
NGINX_LENGTHHIDE='y'
# https://github.com/nulab/nginx-length-hiding-filter-module
# NGINX_LENGTHHIDEGIT='y'
# triggers only if NGINX_LENGTHHIDE='y'
#NGINX_CACHEPURGE='y'       # https://github.com/FRiCKLE/ngx_cache_purge/
#NGINX_HTTPREDIS='y'          # Nginx redis http://wiki.nginx.org/HttpRedisModule
#NGINX_HTTPREDISVER='0.3.7'   # Nginx redis version
# LibreSSL
LIBRESSL_SWITCH='n'        # if set to 'y' it overrides OpenSSL as the default static compiled option for Nginx server
LIBRESSL_VERSION='3.0.2'   # Use this version of LibreSSL http://www.libressl.org/

# BoringSSL
# not working yet just prep work
BORINGSSL_SWITCH='n'       # if set to 'y' it overrides OpenSSL as the default static compiled option for Nginx server
BORINGSSL_SHARED='y'       # build boringssl as shared library so nginx can dynamically compile boringssl
BORINGSSL_DIR="/opt"
NOSOURCEOPENSSL='y'
# set to 'y' to disable OpenSSL source compile for system default YUM package setup
OPENSSL_VERSION='1.1.1h'
# Use this version of OpenSSL http://openssl.org/
OPENSSL_TLSONETHREE='y'
# whether OpenSSL 1.1.1 builds enable TLSv1.3
ORESTY_LUANGINX='n'
# enable or disable or ORESTY_LUA* nginx modules below


